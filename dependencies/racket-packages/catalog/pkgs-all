#hash(("auto-syntax-e" . #hash((author . "") (checksum . "ff59aafa164f7c68227ec427695810e949b2d559") (dependencies . (("base") ("rackunit-lib") ("scribble-lib") ("racket-doc"))) (description . "") (modules . ((lib "auto-syntax-e/utils.rkt") (lib "auto-syntax-e/scribblings/auto-syntax-e.scrbl") (lib "auto-syntax-e/test/test-meta.rkt") (lib "auto-syntax-e/test/test-auto-syntax-e.rkt") (lib "auto-syntax-e/main.rkt"))) (name . "auto-syntax-e") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/auto-syntax-e.zip") (tags . ()))) ("basedir" . #hash((author . "") (checksum . "a386bf9fd4c395944bc080efc013a19895f30f43") (dependencies . (("base") ("scribble-lib") ("racket-doc"))) (description . "") (modules . ((lib "basedir/basedir.scrbl") (lib "basedir/main.rkt"))) (name . "basedir") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/basedir.zip") (tags . ()))) ("csv-reading" . #hash((author . "") (checksum . "489c2395e64f00e99e03abba7087e11a43159159") (dependencies . (("base") ("mcfly") ("racket-doc") ("scribble-lib") ("overeasy"))) (description . "") (modules . ((lib "csv-reading/csv-reading.scrbl") (lib "csv-reading/main.rkt"))) (name . "csv-reading") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/csv-reading.zip") (tags . ()))) ("debug-scopes" . #hash((author . "") (checksum . "a0c5ae2e2517bbaf0e8d10adf99a03899566dcf9") (dependencies . (("base") ("pretty-format") ("rackunit-lib") ("reprovide-lang") ("scribble-lib") ("racket-doc") ("scribble-enhanced"))) (description . "") (modules . ((lib "debug-scopes/main.rkt") (lib "debug-scopes/test/named-scopes-test-def.rkt") (lib "debug-scopes/named-scopes/override.rkt") (lib "debug-scopes/named-scopes/dummy-lang.rkt") (lib "debug-scopes/scribblings/debug-scopes.scrbl") (lib "debug-scopes/named-scopes.rkt") (lib "debug-scopes/test/named-scopes-test-use.rkt") (lib "debug-scopes/superscripts.rkt") (lib "debug-scopes/named-scopes/exptime.rkt") (lib "debug-scopes/named-scopes-sli-parameter.rkt"))) (name . "debug-scopes") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/debug-scopes.zip") (tags . ()))) ("faster-minikanren" . #hash((author . "") (checksum . "ae4496c8f920484f7e90aa329475e492c631c0fb") (dependencies . (("base"))) (description . "") (modules . ((lib "minikanren/full-interp.rkt") (lib "minikanren/simple-interp.rkt") (lib "minikanren/matche.rkt") (lib "minikanren/mk.rkt") (lib "minikanren/main.rkt") (lib "minikanren/numbers.rkt"))) (name . "faster-minikanren") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/faster-minikanren.zip") (tags . ()))) ("hyper-literate" . #hash((author . "") (checksum . "c726efbd3b391a67a6a1e9b306f75b8d209081a6") (dependencies . (("base") ("rackunit-lib") ("at-exp-lib") ("scheme-lib") ("scribble-lib") ("typed-racket-lib") ("typed-racket-more") ("typed-racket-doc") ("scribble-enhanced") ("sexp-diff") ("tr-immutable") ("typed-map-lib") ("debug-scopes") ("syntax-color-lib") ("racket-doc") ("rackunit-doc") ("scribble-doc"))) (description . "") (modules . ((lib "hyper-literate/private/common.rkt") (lib "hyper-literate/test/comments/same-syntax-typed.rkt") (lib "hyper-literate/comments/syntax-properties.rkt") (lib "hyper-literate/test/test.hl.rkt") (lib "hyper-literate/test/test-doc.rkt") (lib "hyper-literate/private/no-auto-require.rkt") (lib "hyper-literate/test/test2.hl.rkt") (lib "hyper-literate/comments/syntax-properties-typed.rkt") (lib "hyper-literate/spoiler1.rkt") (lib "hyper-literate/test/comments/annotate-syntax-typed.rkt") (lib "hyper-literate/test/comments/annotate-syntax.rkt") (lib "hyper-literate/test/comments/same-syntax.rkt") (lib "hyper-literate/comments/restore-comments.rkt") (lib "hyper-literate/lang.rkt") (lib "hyper-literate/comments/hide-comments.rkt") (lib "hyper-literate/diff1.rkt") (lib "hyper-literate/lang/first-line-utils.rkt") (lib "hyper-literate/comment-reader.rkt") (lib "hyper-literate/test/test-chunks-order.rkt") (lib "hyper-literate/comments/restore-comments-typed.rkt") (lib "hyper-literate/scribblings/diff1-example.hl.rkt") (lib "hyper-literate/main.rkt") (lib "hyper-literate/lang/reader.rkt") (lib "hyper-literate/scribblings/hyper-literate.scrbl") (lib "hyper-literate/comments/hide-comments-typed.rkt") (lib "hyper-literate/test/comments/test-comments-round-trip.rkt") (lib "hyper-literate/private/lp.rkt") (lib "hyper-literate/restore-comments.rkt") (lib "hyper-literate/lang/meta-first-line.rkt") (lib "hyper-literate/private/chunks-toc-prefix.rkt"))) (name . "hyper-literate") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/hyper-literate.zip") (tags . ()))) ("kw-utils" . #hash((author . "") (checksum . "65e6ea149d3b4f133920c6c2bf03ce4a82c59bab") (dependencies . (("base") ("sweet-exp-lib") ("rackunit-lib") ("scribble-lib") ("racket-doc") ("rackjure"))) (description . "") (modules . ((lib "kw-utils/docs/kw-map.scrbl") (lib "kw-utils/arity+keywords/syntax.rkt") (lib "kw-utils/docs/kw-hash.scrbl") (lib "kw-utils/keyword-apply-sort.rkt") (lib "kw-utils/docs/kw-lists-lambda.scrbl") (lib "kw-utils/partial.rkt") (lib "kw-utils/kw-lists-lambda.rkt") (lib "kw-utils/kw-map.rkt") (lib "kw-utils/docs/keyword-lambda.scrbl") (lib "kw-utils/kw-hash/contract.rkt") (lib "kw-utils/arity+keywords.rkt") (lib "kw-utils/docs/partial.scrbl") (lib "kw-utils/docs/mapper.scrbl") (lib "kw-utils/kw-apply.rkt") (lib "kw-utils/mapper.rkt") (lib "kw-utils/docs/arity+keywords.scrbl") (lib "kw-utils/docs/keyword-apply-sort.scrbl") (lib "kw-utils/docs/kw-utils.scrbl") (lib "kw-utils/kw-hash.rkt") (lib "kw-utils/keyword-lambda.rkt") (lib "kw-utils/keyword-app.rkt") (lib "kw-utils/kw-hash-lambda.rkt"))) (name . "kw-utils") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/kw-utils.zip") (tags . ()))) ("lang-file-lib" . #hash((author . "") (checksum . "3905ef50d1574b7191f49728f07efbfbe3990af4") (dependencies . (("base") ("rackunit-lib"))) (description . "") (modules . ((lib "lang-file/read-lang-file.rkt"))) (name . "lang-file-lib") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/lang-file-lib.zip") (tags . ()))) ("mcfly" . #hash((author . "") (checksum . "7645f7d3440092d5760ff909819dd6c2e9f54c37") (dependencies . (("at-exp-lib") ("base") ("scribble-lib") ("racket-doc"))) (description . "") (modules . ((lib "mcfly/mcfly-misc.rkt") (lib "mcfly/doc.rkt") (lib "mcfly/mcfly-expand.rkt") (lib "mcfly/main.rkt") (lib "mcfly/mcfly-scribble.rkt") (lib "mcfly/mcfly-format.rkt") (lib "mcfly/test-mcfly-spec.rkt") (lib "mcfly/mcfly-parse.rkt") (lib "mcfly/mcfly.scrbl") (lib "mcfly/mcfly-spec.rkt"))) (name . "mcfly") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/mcfly.zip") (tags . ()))) ("mutable-match-lambda" . #hash((author . "") (checksum . "81f14edf251dda6e840d1ab6326d7b83d8e58508") (dependencies . (("base") ("kw-utils") ("rackunit-lib") ("at-exp-lib") ("scribble-lib") ("sandbox-lib") ("racket-doc"))) (description . "") (modules . ((lib "mutable-match-lambda/mutable-match-lambda-procedure.rkt") (lib "mutable-match-lambda/main.rkt") (lib "mutable-match-lambda/let-inferred-name.rkt") (lib "mutable-match-lambda/make-clause-proc.rkt") (lib "mutable-match-lambda/communication.rkt") (lib "mutable-match-lambda/prop-object-name.rkt") (lib "mutable-match-lambda/docs/mutable-match-lambda.scrbl") (lib "mutable-match-lambda/syntax-to-string.rkt"))) (name . "mutable-match-lambda") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/mutable-match-lambda.zip") (tags . ()))) ("overeasy" . #hash((author . "") (checksum . "6f4b643f45fb76d1a61c3e364a9c149f6751dda1") (dependencies . (("base") ("racket-doc") ("scribble-lib") ("mcfly"))) (description . "") (modules . ((lib "overeasy/test-overeasy.rkt") (lib "overeasy/main.rkt") (lib "overeasy/overeasy.rkt") (lib "overeasy/overeasy.scrbl"))) (name . "overeasy") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/overeasy.zip") (tags . ()))) ("pretty-format" . #hash((author . "") (checksum . "a6b3b1592826caada4610d7bad5dbb1e3123fa44") (dependencies . (("base") ("typed-racket-lib") ("rackunit-lib") ("scribble-lib") ("racket-doc"))) (description . "") (modules . ((lib "typed/pretty-format.rkt") (lib "pretty-format/scribblings/pretty-format.scrbl") (lib "pretty-format/main.rkt"))) (name . "pretty-format") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/pretty-format.zip") (tags . ()))) ("rackjure" . #hash((author . "") (checksum . "9b43117d340cc1de3d74e22bccdaf7feeb93d568") (dependencies . (("base") ("rackunit-lib") ("threading-lib") ("racket-doc") ("sandbox-lib") ("scribble-lib") ("threading-doc"))) (description . "") (modules . ((lib "rackjure/lang/reader.rkt") (lib "rackjure/egal.rkt") (lib "rackjure/bench.rkt") (lib "rackjure/lambda-reader.rkt") (lib "rackjure/app.rkt") (lib "rackjure/alist.rkt") (lib "rackjure/utils.rkt") (lib "rackjure/conditionals.rkt") (lib "rackjure/rackjure.scrbl") (lib "rackjure/test.rkt") (lib "rackjure/base/lang/reader.rkt") (lib "rackjure/threading.rkt") (lib "rackjure/lang/runtime-config.rkt") (lib "rackjure/main.rkt") (lib "rackjure/check-expansion.rkt") (lib "rackjure/base.rkt") (lib "rackjure/str.rkt") (lib "rackjure/lang/language-info.rkt") (lib "rackjure/rackjure.rkt") (lib "rackjure/dict.rkt"))) (name . "rackjure") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/rackjure.zip") (tags . ()))) ("reprovide-lang" . #hash((author . "") (checksum . "3544fd2fe3e676832cfad36a8f684fd9ec8968ff") (dependencies . (("base") ("reprovide-lang-lib") ("rackunit-lib") ("scribble-lib") ("racket-doc"))) (description . "") (modules . ((lib "reprovide/test/example-directory/c.rkt") (lib "reprovide/test/use.rkt") (lib "reprovide/test/use-combine-in-except.rkt") (lib "reprovide/test/test-combine-in-except.rkt") (lib "reprovide/scribblings/reprovide.scrbl") (lib "reprovide/test/test.rkt") (lib "reprovide/test/use-glob-in.rkt") (lib "reprovide/test/example-directory/b.rkt") (lib "reprovide/test/other-subdir/indirect-glob-in.rkt") (lib "reprovide/test/example-directory/a.rkt"))) (name . "reprovide-lang") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/reprovide-lang.zip") (tags . ()))) ("reprovide-lang-lib" . #hash((author . "") (checksum . "da1bba3bb59c51b81c8f7cf10a08f6d339697c18") (dependencies . (("base") ("lang-file-lib") ("syntax-macro-lang"))) (description . "") (modules . ((lib "reprovide/require-transformer/directory-in.rkt") (lib "reprovide/reprovide.rkt") (lib "reprovide/require-transformer/combine-in-except.rkt") (lib "reprovide/require-transformer/glob-in.rkt") (lib "reprovide/require-transformer/private/this-expression-source-file.rkt") (lib "reprovide/main.rkt"))) (name . "reprovide-lang-lib") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/reprovide-lang-lib.zip") (tags . ()))) ("scribble-enhanced" . #hash((author . "") (checksum . "56a9927925db671d8d673f07eaebbb545ea228e2") (dependencies . (("base") ("rackunit-lib") ("scribble-lib") ("scheme-lib") ("compatibility-lib") ("slideshow-lib") ("typed-racket-lib") ("reprovide-lang") ("mutable-match-lambda") ("racket-doc") ("at-exp-lib") ("typed-racket-more") ("typed-racket-doc") ("scribble-doc"))) (description . "") (modules . ((lib "scribble-enhanced/main.rkt") (lib "scribble-enhanced/math.rkt") (lib "scribble-enhanced/manual-scheme.rkt") (lib "scribble-enhanced/doc.rkt") (lib "scribble-enhanced/manual-form.rkt") (lib "scribble-enhanced/with-manual.rkt") (lib "scribble-enhanced/racket.rkt") (lib "scribble-enhanced/scribblings/scribble-enhanced-template.lp2.rkt") (lib "scribble-enhanced/scribblings/scribble-enhanced.scrbl") (lib "scribble-enhanced/scribblings/scribble-enhanced-example.lp2.rkt") (lib "scribble-enhanced/unicode-chars.sty.rkt") (lib "scribble-enhanced/forkmeongithub.rkt"))) (name . "scribble-enhanced") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/scribble-enhanced.zip") (tags . ()))) ("sexp-diff" . #hash((author . "") (checksum . "ade1347ecac94fc961a60f559a529579dea75b21") (dependencies . (("base") ("scribble-lib") ("rackunit-lib"))) (description . "") (modules . ((lib "sexp-diff/stx-diff.rkt") (lib "sexp-diff/utils.rkt") (lib "sexp-diff/sexp-diff.rkt") (lib "sexp-diff/main.rkt") (lib "sexp-diff/sexp-diff.scrbl"))) (name . "sexp-diff") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/sexp-diff.zip") (tags . ()))) ("sweet-exp-lib" . #hash((author . "") (checksum . "94181a69f2d4ba69a96b8a5c94498f4aac77636a") (dependencies . (("base"))) (description . "") (modules . ((lib "sweet-exp/sugar.rkt") (lib "sweet-exp/modern.rkt") (lib "sweet-exp/read-sig.rkt") (lib "sweet-exp/indent.rkt") (lib "sweet-exp/util.rkt") (lib "sweet-exp/modern/process-curly.rkt") (lib "sweet-exp/sweet.rkt") (lib "sweet-exp/racket/init.rkt") (lib "sweet-exp/main.rkt"))) (name . "sweet-exp-lib") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/sweet-exp-lib.zip") (tags . ()))) ("syntax-macro-lang" . #hash((author . "") (checksum . "faefaabaa1a53ec2370070c7e19f554cd85fe719") (dependencies . (("base"))) (description . "") (modules . ((lib "tests/syntax/macro-lang/the-lang.rkt") (lib "tests/syntax/macro-lang/test.rkt") (lib "syntax/macro-lang.rkt"))) (name . "syntax-macro-lang") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/syntax-macro-lang.zip") (tags . ()))) ("text-table" . #hash((author . "") (checksum . "dc9ef0aa2d021e770b0cd1fc748b4de147d0a30f") (dependencies . (("base") ("scribble-lib") ("racket-doc") ("rackunit-lib"))) (description . "") (modules . ((lib "text-table/scribblings/text-table.scrbl") (lib "text-table/main.rkt"))) (name . "text-table") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/text-table.zip") (tags . ()))) ("threading-doc" . #hash((author . "") (checksum . "11192acdbd3c9a20e46a2c6bf2f8d7a99f7e2d53") (dependencies . (("base") ("racket-doc") ("scribble-lib") ("threading-lib"))) (description . "") (modules . ((lib "scribblings/threading.scrbl"))) (name . "threading-doc") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/threading-doc.zip") (tags . ()))) ("threading-lib" . #hash((author . "") (checksum . "71b614386a179172f354d58956e576b0d556a691") (dependencies . (("base"))) (description . "") (modules . ((lib "threading/main.rkt"))) (name . "threading-lib") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/threading-lib.zip") (tags . ()))) ("tr-immutable" . #hash((author . "") (checksum . "28ad165598c48006758146d68e61edb084794e8a") (dependencies . (("base") ("rackunit-lib") ("typed-racket-lib") ("typed-racket-more") ("typed-map-lib") ("scribble-lib") ("racket-doc") ("typed-racket-doc"))) (description . "") (modules . ((lib "tr-immutable/typed-syntax/typed-prefab-declarations.rkt") (lib "tr-immutable/private/unsafe.rkt") (lib "tr-immutable/test/test-vector.rkt") (lib "tr-immutable/scribblings/tr-immutable.scrbl") (lib "tr-immutable/typed-syntax/typed-syntax-convert2.rkt") (lib "tr-immutable/main.rkt") (lib "tr-immutable/typed-syntax/typed-syntax-predicate.rkt") (lib "tr-immutable/typed-syntax/typed-pairof-predicate.rkt") (lib "tr-immutable/typed-syntax/typed-syntax-convert.rkt") (lib "tr-immutable/typed-syntax.rkt"))) (name . "tr-immutable") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/tr-immutable.zip") (tags . ()))) ("typed-map-lib" . #hash((author . "") (checksum . "20391ae225895f8f3e65f29c62d3216ef3ee408d") (dependencies . (("base") ("typed-racket-lib"))) (description . "") (modules . ((lib "typed-map/main.rkt"))) (name . "typed-map-lib") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/typed-map-lib.zip") (tags . ()))) ("udelim" . #hash((author . "") (checksum . "d4d4f131a7908a8bbaee771ee0ed536579e6d73d") (dependencies . (("base") ("racket-doc") ("scribble-lib") ("sandbox-lib") ("rackunit-lib"))) (description . "") (modules . ((lib "udelim/udelim.scrbl") (lib "udelim/main.rkt") (lib "udelim/lang/reader.rkt") (lib "udelim/defaults.rkt"))) (name . "udelim") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/udelim.zip") (tags . ()))) ("version-case" . #hash((author . "") (checksum . "9defcebfe295968f58a51857e3345ae159fb2f89") (dependencies . (("base") ("compatibility-lib") ("drracket-plugin-lib") ("gui-lib") ("scheme-lib") ("srfi-lib") ("srfi-lite-lib") ("racket-doc") ("scribble-lib"))) (description . "") (modules . ((lib "version-case/version-case.rkt") (lib "version-case/main.rkt") (lib "version-case/private/old-version-case.rkt") (lib "version-case/version-misc.rkt") (lib "version-case/test-version-case.rkt") (lib "version-case/private/new-version-case.rkt") (lib "version-case/version-case.scrbl"))) (name . "version-case") (ring . #f) (source . "/root/dependencies/racket-packages/pkgs/version-case.zip") (tags . ()))))